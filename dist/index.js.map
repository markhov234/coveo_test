{"version":3,"file":"index.js","mappings":"mBAEA,MAAMA,EAASC,2BCEfC,SAASC,iBAAiB,oBAAoBC,gBCAvCA,iBACL,MAAMC,QCHDD,iBAQL,aAPuBE,MHALL,sDGAwB,CACxCM,OAAQ,MACRC,QAAS,CACP,WAAYR,EACZ,eAAgB,uBAGJS,MAClB,CDN6BC,GACrBC,EAAkBT,SAASU,cAC/B,mCAEFD,EAAgBE,UAAY,GAE5BR,EAAaS,SAASC,IACpB,MAAMC,EAAad,SAASe,cAAc,OAC1CD,EAAWE,UAAUC,IAAI,yBAEzBH,EAAWH,UAAY,uHAEgCE,EAAQK,gBAAgBL,EAAQM,cAAcN,EAAQO,0EAEnEP,EAAQM,cAAcN,EAAQO,+DAC7BP,EAAQQ,gBAAgBR,EAAQS,oBAG3Eb,EAAgBc,YAAYT,EAAW,GAE3C,CDpBQU,SCsBDtB,iBACL,MAAMuB,QCfDvB,iBAQL,aAPuBE,MHVPL,oDGUwB,CACtCM,OAAQ,MACRC,QAAS,CACP,WAAYR,EACZ,eAAgB,uBAGJS,MAClB,CDM2BmB,GACnBC,EAAmB3B,SAASU,cAAc,6BAC1CkB,EAAkB5B,SAASU,cAAc,4BACzCmB,EAAyB7B,SAASU,cACtC,mCAGIoB,EAAYL,EAAWM,MAAMC,GAA6B,SAAnBA,EAAMC,WAC/CH,IACFH,EAAiBO,YAAcJ,EAAUK,MACzCP,EAAgBM,YEtCb,SAAoBE,GACzB,MAAMC,EAAO,IAAIC,KAAKF,GAOtB,IAAIG,EAAgB,IAAIC,KAAKC,eAAe,QAN5B,CACdC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,YAEuDC,OAAOT,GAErE,MAAMQ,EAAMR,EAAKU,UACjB,IAAIC,EAEJ,GAAIH,GAAO,IAAMA,GAAO,GACtBG,EAAY,UAEZ,OAAQH,EAAM,IACZ,KAAK,EACHG,EAAY,KACZ,MACF,KAAK,EACHA,EAAY,KACZ,MACF,KAAK,EACHA,EAAY,KACZ,MACF,QACEA,EAAY,KAKlB,OADAT,EAAgBA,EAAcU,QAAQ,MAAOJ,EAAMG,GAC5CT,CACT,CFKkCW,CAAWpB,EAAUO,MACnDR,EAAuBK,YAAcJ,EAAUqB,YAEnD,CDnCQC,EAAe,G","sources":["webpack://coveo/./src/script/apiConfig.js","webpack://coveo/./src/script/index.js","webpack://coveo/./src/script/uiService.js","webpack://coveo/./src/script/apiService.js","webpack://coveo/./src/script/formatDate.js"],"sourcesContent":["// src/apiConfig.js\r\n\r\nconst apiKey = process.env.APP_API_KEY; // Access the API key from the .env file\r\nconst speakersUrl = process.env.APP_SPEAKERS_URL; // Access the speakers URL from the .env file\r\nconst eventsUrl = process.env.APP_EVENTS_URL; // Access the events URL from the .env file\r\n\r\nexport { apiKey, speakersUrl, eventsUrl };\r\n","// main.js\r\nimport { loadSpeakers, loadMainEvent } from \"./uiService.js\";\r\nimport \"../style/sass/style.scss\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n  await loadSpeakers();\r\n  await loadMainEvent();\r\n});\r\n","// uiService.js\r\nimport { fetchSpeakers, fetchEvents } from \"./apiService.js\";\r\nimport { formatDate } from \"./formatDate.js\";\r\n\r\nexport async function loadSpeakers() {\r\n  const speakersData = await fetchSpeakers();\r\n  const speakersSection = document.querySelector(\r\n    \".main-content__speakers-section\"\r\n  );\r\n  speakersSection.innerHTML = \"\";\r\n\r\n  speakersData.forEach((speaker) => {\r\n    const speakerDiv = document.createElement(\"div\");\r\n    speakerDiv.classList.add(\"main-content__speaker\");\r\n\r\n    speakerDiv.innerHTML = `\r\n      <div class=\"main-content__speaker-image-wrapper\">\r\n        <img class=\"main-content__speaker-headshot\" src=\"${speaker.avatar}\" alt=\"${speaker.first_name} ${speaker.last_name}\">\r\n      </div>\r\n      <p class=\"main-content__speaker-name\">${speaker.first_name} ${speaker.last_name}</p>\r\n      <p class=\"main-content__speaker-title\">${speaker.job_title} of ${speaker.company}</p>\r\n    `;\r\n\r\n    speakersSection.appendChild(speakerDiv);\r\n  });\r\n}\r\n\r\nexport async function loadMainEvent() {\r\n  const eventsData = await fetchEvents();\r\n  const mainTitleElement = document.querySelector(\".main-content__info-title\");\r\n  const mainDateElement = document.querySelector(\".main-content__info-date\");\r\n  const mainDescriptionElement = document.querySelector(\r\n    \".main-content__info-description\"\r\n  );\r\n\r\n  const mainEvent = eventsData.find((event) => event.category === \"r360\");\r\n  if (mainEvent) {\r\n    mainTitleElement.textContent = mainEvent.title;\r\n    mainDateElement.textContent = formatDate(mainEvent.date);\r\n    mainDescriptionElement.textContent = mainEvent.description;\r\n  }\r\n}\r\n","import { apiKey, speakersUrl, eventsUrl } from \"./apiConfig.js\";\r\n\r\nexport async function fetchSpeakers() {\r\n  const response = await fetch(speakersUrl, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"x-apikey\": apiKey,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response.json();\r\n}\r\n\r\nexport async function fetchEvents() {\r\n  const response = await fetch(eventsUrl, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"x-apikey\": apiKey,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response.json();\r\n}\r\n","export function formatDate(dateString) {\r\n  const date = new Date(dateString);\r\n  const options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n  let formattedDate = new Intl.DateTimeFormat(\"en-US\", options).format(date);\r\n\r\n  const day = date.getDate();\r\n  let daySuffix;\r\n\r\n  if (day >= 11 && day <= 13) {\r\n    daySuffix = \"th\";\r\n  } else {\r\n    switch (day % 10) {\r\n      case 1:\r\n        daySuffix = \"st\";\r\n        break;\r\n      case 2:\r\n        daySuffix = \"nd\";\r\n        break;\r\n      case 3:\r\n        daySuffix = \"rd\";\r\n        break;\r\n      default:\r\n        daySuffix = \"th\";\r\n    }\r\n  }\r\n\r\n  formattedDate = formattedDate.replace(/\\d+/, day + daySuffix);\r\n  return formattedDate;\r\n}\r\n"],"names":["apiKey","process","document","addEventListener","async","speakersData","fetch","method","headers","json","fetchSpeakers","speakersSection","querySelector","innerHTML","forEach","speaker","speakerDiv","createElement","classList","add","avatar","first_name","last_name","job_title","company","appendChild","loadSpeakers","eventsData","fetchEvents","mainTitleElement","mainDateElement","mainDescriptionElement","mainEvent","find","event","category","textContent","title","dateString","date","Date","formattedDate","Intl","DateTimeFormat","weekday","year","month","day","format","getDate","daySuffix","replace","formatDate","description","loadMainEvent"],"sourceRoot":""}